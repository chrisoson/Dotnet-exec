name: default

on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:
    # The branches below must be a subset of the branches above
    branches:
      - "main"
      - "dev"

jobs:
  build:
    name: Running tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x
          7.x
          8.x
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.*', '**/*.csproj') }}
        restore-keys: |
          ${{ matrix.os }}-nuget
    - name: dotnet info
      run: dotnet --info
    - name: build
      run: bash build.sh --target=test
      
  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.x
          7.x
          8.x
    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.*', '**/*.csproj') }}
        restore-keys: |
          windows-nuget
    - name: Setup dotnet-sonar
      run: |
        dotnet tool update --global dotnet-sonar
        dotnet-sonarscanner begin /k:"WeihanLi_dotnet-exec" /o:"weihanli" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
    - name: dotnet info
      run: dotnet --info
    - name: build
      shell: pwsh
      run: .\build.ps1
    - name: post build
      run: dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}